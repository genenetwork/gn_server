defmodule BiodallianceTest do
  use ExUnit.Case, async: true
  use Maru.Test # , root: GnServer.Biodalliance.SNPDensity

  test "/snp/features/" do
    # %Plug.Conn{resp_body: value} = get("/snp/features/11?start=1&end=10000000")
    # |> text_response

    # features = Poison.decode!(value)
    # |> Map.get("features")
    # |> Enum.sort_by(fn f -> f["start"] end)

    # expected_scores =
    #     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 3, 6, 3, 0, 0, 0, 0, 0, 1, 1, 1, 5, 2, 1, 3, 1, 0, 4, 0, 0, 1, 0, 2, 0, 0, 0, 1, 1, 3, 0, 1, 1, 0, 1, 2, 1, 1, 1, 1, 2, 1, 0, 2, 3, 1, 1, 1, 0, 1, 1, 4, 0, 0, 1, 3, 1, 1, 8, 2, 0, 1, 3, 8, 2, 1, 1, 18, 9, 5, 30, 11, 1, 2, 4, 1, 1, 0, 1, 2, 0, 0, 0, 7, 1, 3, 0, 0, 2, 1, 5, 13, 0, 3, 1, 2, 3, 1, 2, 0, 0, 0, 6, 1, 3, 0, 1, 4, 0, 0, 1, 1, 4, 0, 1, 0, 1, 1, 0, 2, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 4, 0, 0, 1, 0, 0, 0, 2, 0, 2, 6, 8, 0, 0, 4, 1, 1, 1, 0, 0, 1, 0, 1, 2, 4, 1, 0, 1, 2, 1, 3, 3, 1, 3, 0, 1, 0, 1, 2, 2, 0, 1, 2, 1, 0, 8, 0, 2, 3, 0, 1, 4, 0, 2, 1, 0, 0, 0, 29, 1, 6, 4, 2, 1, 1, 1, 3, 10, 6, 91, 92, 61, 51, 41, 75, 92, 74, 89, 42, 1, 1, 2, 94, 53, 18, 1, 4, 0, 2, 7, 5, 1, 4, 1, 0, 10, 0, 5, 1, 8, 70, 57, 56, 41, 9, 2, 2, 4, 4, 2, 38, 102, 49, 66, 93, 82]

    # assert expected_scores == Enum.map(features, fn f -> f["score"] end)
  end
end
